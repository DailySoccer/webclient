library webclient.web.main.generated_expressions;

import 'package:angular/change_detection/change_detection.dart';

final Map<String, FieldGetter> getters = {
  r"select": (o) => o.select,
  r"urls": (o) => o.urls,
  r"value": (o) => o.value,
  r"bind": (o) => o.bind,
  r"valueExpression": (o) => o.valueExpression,
  r"onAbort": (o) => o.onAbort,
  r"onBeforeCopy": (o) => o.onBeforeCopy,
  r"onBeforeCut": (o) => o.onBeforeCut,
  r"onBeforePaste": (o) => o.onBeforePaste,
  r"onBlur": (o) => o.onBlur,
  r"onChange": (o) => o.onChange,
  r"onClick": (o) => o.onClick,
  r"onContextMenu": (o) => o.onContextMenu,
  r"onCopy": (o) => o.onCopy,
  r"onCut": (o) => o.onCut,
  r"onDoubleClick": (o) => o.onDoubleClick,
  r"onDrag": (o) => o.onDrag,
  r"onDragEnd": (o) => o.onDragEnd,
  r"onDragEnter": (o) => o.onDragEnter,
  r"onDragLeave": (o) => o.onDragLeave,
  r"onDragOver": (o) => o.onDragOver,
  r"onDragStart": (o) => o.onDragStart,
  r"onDrop": (o) => o.onDrop,
  r"onError": (o) => o.onError,
  r"onFocus": (o) => o.onFocus,
  r"onFullscreenChange": (o) => o.onFullscreenChange,
  r"onFullscreenError": (o) => o.onFullscreenError,
  r"onInput": (o) => o.onInput,
  r"onInvalid": (o) => o.onInvalid,
  r"onKeyDown": (o) => o.onKeyDown,
  r"onKeyPress": (o) => o.onKeyPress,
  r"onKeyUp": (o) => o.onKeyUp,
  r"onLoad": (o) => o.onLoad,
  r"onMouseDown": (o) => o.onMouseDown,
  r"onMouseEnter": (o) => o.onMouseEnter,
  r"onMouseLeave": (o) => o.onMouseLeave,
  r"onMouseMove": (o) => o.onMouseMove,
  r"onMouseOut": (o) => o.onMouseOut,
  r"onMouseOver": (o) => o.onMouseOver,
  r"onMouseUp": (o) => o.onMouseUp,
  r"onMouseWheel": (o) => o.onMouseWheel,
  r"onPaste": (o) => o.onPaste,
  r"onReset": (o) => o.onReset,
  r"onScroll": (o) => o.onScroll,
  r"onSearch": (o) => o.onSearch,
  r"onSelect": (o) => o.onSelect,
  r"onSelectStart": (o) => o.onSelectStart,
  r"onSubmit": (o) => o.onSubmit,
  r"onTouchCancel": (o) => o.onTouchCancel,
  r"onTouchEnd": (o) => o.onTouchEnd,
  r"onTouchEnter": (o) => o.onTouchEnter,
  r"onTouchLeave": (o) => o.onTouchLeave,
  r"onTouchMove": (o) => o.onTouchMove,
  r"onTouchStart": (o) => o.onTouchStart,
  r"onTransitionEnd": (o) => o.onTransitionEnd,
  r"condition": (o) => o.condition,
  r"url": (o) => o.url,
  r"name": (o) => o.name,
  r"model": (o) => o.model,
  r"idlAttrKind": (o) => o.idlAttrKind,
  r"count": (o) => o.count,
  r"expression": (o) => o.expression,
  r"templateUrl": (o) => o.templateUrl,
  r"hide": (o) => o.hide,
  r"show": (o) => o.show,
  r"checked": (o) => o.checked,
  r"disabled": (o) => o.disabled,
  r"multiple": (o) => o.multiple,
  r"open": (o) => o.open,
  r"readonly": (o) => o.readonly,
  r"required": (o) => o.required,
  r"selected": (o) => o.selected,
  r"href": (o) => o.href,
  r"src": (o) => o.src,
  r"srcset": (o) => o.srcset,
  r"styleExpression": (o) => o.styleExpression,
  r"max": (o) => o.max,
  r"min": (o) => o.min,
  r"pattern": (o) => o.pattern,
  r"minlength": (o) => o.minlength,
  r"maxlength": (o) => o.maxlength,
  r"options": (o) => o.options,
  r"option": (o) => o.option,
  r"routeName": (o) => o.routeName,
  r"windowSize": (o) => o.windowSize,
  r"Data": (o) => o.Data,
  r"Earned": (o) => o.Earned,
  r"currentSelectedDate": (o) => o.currentSelectedDate,
  r"dates": (o) => o.dates,
  r"onDayClickCallback": (o) => o.onDayClickCallback,
  r"maxWidth": (o) => o.maxWidth,
  r"fbUser": (o) => o.fbUser,
  r"onChallenge": (o) => o.onChallenge,
  r"showChallenge": (o) => o.showChallenge,
  r"showManagerLevel": (o) => o.showManagerLevel,
  r"idError": (o) => o.idError,
  r"matchFilter": (o) => o.matchFilter,
  r"setContest": (o) => o.setContest,
  r"viewState": (o) => o.viewState,
  r"setModal": (o) => o.setModal,
  r"setShowMatches": (o) => o.setShowMatches,
  r"setContestId": (o) => o.setContestId,
  r"setShowFilter": (o) => o.setShowFilter,
  r"selectedOption": (o) => o.selectedOption,
  r"teamList": (o) => o.teamList,
  r"identifier": (o) => o.identifier,
  r"onPageChange": (o) => o.onPageChange,
  r"itemsPerPageCount": (o) => o.itemsPerPageCount,
  r"listLength": (o) => o.listLength,
  r"description": (o) => o.description,
  r"image": (o) => o.image,
  r"caption": (o) => o.caption,
  r"title": (o) => o.title,
  r"onShare": (o) => o.onShare,
  r"showLike": (o) => o.showLike,
  r"info": (o) => o.info,
  r"profileService": (o) => o.profileService,
  r"user": (o) => o.user,
  r"isModal": (o) => o.isModal,
  r"contestsList": (o) => o.contestsList,
  r"actionButtonTitle": (o) => o.actionButtonTitle,
  r"showDate": (o) => o.showDate,
  r"sortOrder": (o) => o.sortOrder,
  r"filterByDate": (o) => o.filterByDate,
  r"onListChange": (o) => o.onListChange,
  r"onRowClick": (o) => o.onRowClick,
  r"onActionClick": (o) => o.onActionClick,
  r"alertNotEnoughResources": (o) => o.alertNotEnoughResources,
  r"resource": (o) => o.resource,
  r"alertNegativeBalance": (o) => o.alertNegativeBalance,
  r"alertMaxPlayersSameTeamExceed": (o) => o.alertMaxPlayersSameTeamExceed,
  r"managerLevel": (o) => o.managerLevel,
  r"contest": (o) => o.contest,
  r"lineupSlots": (o) => o.lineupSlots,
  r"lineupFormation": (o) => o.lineupFormation,
  r"onLineupSlotSelected": (o) => o.onLineupSlotSelected,
  r"formationId": (o) => o.formationId,
  r"hashtag": (o) => o.hashtag,
  r"flashMessageService": (o) => o.flashMessageService,
  r"flashMessages": (o) => o.flashMessages,
  r"globalMessages": (o) => o.globalMessages,
  r"nameFilter": (o) => o.nameFilter,
  r"fieldPosFilter": (o) => o.fieldPosFilter,
  r"onlyFavorites": (o) => o.onlyFavorites,
  r"showOnXs": (o) => o.showOnXs,
  r"showFavoritesButton": (o) => o.showFavoritesButton,
  r"showTitle": (o) => o.showTitle,
  r"positionFiltersEnabled": (o) => o.positionFiltersEnabled,
  r"showHeader": (o) => o.showHeader,
  r"tableValues": (o) => o.tableValues,
  r"playerInfo": (o) => o.playerInfo,
  r"pointsColumnLabel": (o) => o.pointsColumnLabel,
  r"hint": (o) => o.hint,
  r"rowsToShow": (o) => o.rowsToShow,
  r"allSoccerPlayers": (o) => o.allSoccerPlayers,
  r"favoritesPlayers": (o) => o.favoritesPlayers,
  r"onSoccerPlayerAction": (o) => o.onSoccerPlayerAction,
  r"buttonText": (o) => o.buttonText,
  r"setUseAsFilter": (o) => o.setUseAsFilter,
  r"isPanelOpen": (o) => o.isPanelOpen,
  r"templateContest": (o) => o.templateContest,
  r"contestId": (o) => o.contestId,
  r"fbUsers": (o) => o.fbUsers,
  r"contestEntry": (o) => o.contestEntry,
  r"watch": (o) => o.watch,
  r"isOpponent": (o) => o.isOpponent,
  r"showCloseButton": (o) => o.showCloseButton,
  r"showChanges": (o) => o.showChanges,
  r"numChanges": (o) => o.numChanges,
  r"changingSoccerId": (o) => o.changingSoccerId,
  r"availableSalary": (o) => o.availableSalary,
  r"onClose": (o) => o.onClose,
  r"onRequestChange": (o) => o.onRequestChange,
  r"contestEntries": (o) => o.contestEntries,
  r"favoritesList": (o) => o.favoritesList,
  r"hideLineupPlayers": (o) => o.hideLineupPlayers,
  r"additionalGoldPrice": (o) => o.additionalGoldPrice,
  r"setSoccerPlayers": (o) => o.setSoccerPlayers,
  r"setLineupFilter": (o) => o.setLineupFilter,
  r"lineupFilter": (o) => o.lineupFilter,
  r"translate": (o) => o.translate,
  r"isMakingChange": (o) => o.isMakingChange,
  r"scrDet": (o) => o.scrDet,
  r"isXsScreen": (o) => o.isXsScreen,
  r"isOpponentSelected": (o) => o.isOpponentSelected,
  r"lastOpponentSelected": (o) => o.lastOpponentSelected,
  r"mainPlayer": (o) => o.mainPlayer,
  r"updatedDate": (o) => o.updatedDate,
  r"numAvailableChanges": (o) => o.numAvailableChanges,
  r"changingPlayerId": (o) => o.changingPlayerId,
  r"remainingSalaryChangingPlayer": (o) => o.remainingSalaryChangingPlayer,
  r"instanceSoccerPlayer": (o) => o.instanceSoccerPlayer,
  r"soccerPlayerId": (o) => o.soccerPlayerId,
  r"soccerPlayer": (o) => o.soccerPlayer,
  r"userManagerLevel": (o) => o.userManagerLevel,
  r"changePrice": (o) => o.changePrice,
  r"selectedOpponent": (o) => o.selectedOpponent,
  r"modalSize": (o) => o.modalSize,
  r"filteredFriendList": (o) => o.filteredFriendList,
  r"isNotXsScreen": (o) => o.isNotXsScreen,
  r"printableAvailableSalary": (o) => o.printableAvailableSalary,
  r"isSelectingSoccerPlayer": (o) => o.isSelectingSoccerPlayer,
  r"enoughResourcesForEntryFee": (o) => o.enoughResourcesForEntryFee,
  r"resourceName": (o) => o.resourceName,
  r"isNegativeBalance": (o) => o.isNegativeBalance,
  r"playersInSameTeamInvalid": (o) => o.playersInSameTeamInvalid,
  r"playerManagerLevel": (o) => o.playerManagerLevel,
  r"slotIndex": (o) => o.slotIndex,
  r"userIsLoggedIn": (o) => o.userIsLoggedIn,
  r"isInvalidFantasyTeam": (o) => o.isInvalidFantasyTeam,
  r"contestInfoFirstTimeActivation": (o) => o.contestInfoFirstTimeActivation,
  r"theHtml": (o) => o.theHtml,
  r"selectablePlayer": (o) => o.selectablePlayer,
  r"currentInfoData": (o) => o.currentInfoData,
  r"printableSalary": (o) => o.printableSalary,
  r"stat": (o) => o.stat,
  r"seasonResumeStats": (o) => o.seasonResumeStats,
  r"length": (o) => o.length,
  r"seasonTableHeaders": (o) => o.seasonTableHeaders,
  r"item": (o) => o.item,
  r"seasonsList": (o) => o.seasonsList,
  r"year": (o) => o.year,
  r"stats": (o) => o.stats,
  r"$index": (o) => o.$index,
  r"state": (o) => o.state,
  r"$event": (o) => o.$event,
  r"thePassword": (o) => o.thePassword,
  r"MIN_PASSWORD_LENGTH": (o) => o.MIN_PASSWORD_LENGTH,
  r"theRePassword": (o) => o.theRePassword,
  r"errorMessage": (o) => o.errorMessage,
  r"enabledSubmit": (o) => o.enabledSubmit,
  r"day": (o) => o.day,
  r"dayList": (o) => o.dayList,
  r"goldProducts": (o) => o.goldProducts,
  r"captionImage": (o) => o.captionImage,
  r"quantity": (o) => o.quantity,
  r"id": (o) => o.id,
  r"price": (o) => o.price,
  r"isMostPopular": (o) => o.isMostPopular,
  r"energyProducts": (o) => o.energyProducts,
  r"energyItem": (o) => o.energyItem,
  r"purchasable": (o) => o.purchasable,
  r"canBuyEnergy": (o) => o.canBuyEnergy,
  r"contestTileHTML": (o) => o.contestTileHTML,
  r"isCreateContestTileEnabled": (o) => o.isCreateContestTileEnabled,
  r"CreateContestTileText": (o) => o.CreateContestTileText,
  r"isScoutingTileEnabled": (o) => o.isScoutingTileEnabled,
  r"isUpcomingTileEnabled": (o) => o.isUpcomingTileEnabled,
  r"numUpcomingContests": (o) => o.numUpcomingContests,
  r"isLiveTileEnabled": (o) => o.isLiveTileEnabled,
  r"numLiveContests": (o) => o.numLiveContests,
  r"isHistoryTileEnabled": (o) => o.isHistoryTileEnabled,
  r"numVirtualHistoryContests": (o) => o.numVirtualHistoryContests,
  r"numRealHistoryContests": (o) => o.numRealHistoryContests,
  r"isBlogTileEnabled": (o) => o.isBlogTileEnabled,
  r"isHowItWorksEnabled": (o) => o.isHowItWorksEnabled,
  r"notificationList": (o) => o.notificationList,
  r"notification": (o) => o.notification,
  r"type": (o) => o.type,
  r"achievement": (o) => o.achievement,
  r"date": (o) => o.date,
  r"link": (o) => o.link,
  r"profileImage": (o) => o.profileImage,
  r"nameWidth": (o) => o.nameWidth,
  r"nickname": (o) => o.nickname,
  r"challengeText": (o) => o.challengeText,
  r"viewLive": (o) => o.viewLive,
  r"viewHistory": (o) => o.viewHistory,
  r"numEntries": (o) => o.numEntries,
  r"entryFee": (o) => o.entryFee,
  r"sharingInfo": (o) => o.sharingInfo,
  r"isInsideModal": (o) => o.isInsideModal,
  r"showMatches": (o) => o.showMatches,
  r"showFilter": (o) => o.showFilter,
  r"idSufix": (o) => o.idSufix,
  r"isTeamsPanelOpen": (o) => o.isTeamsPanelOpen,
  r"team": (o) => o.team,
  r"optionsSelectorValue": (o) => o.optionsSelectorValue,
  r"loadingService": (o) => o.loadingService,
  r"isLoading": (o) => o.isLoading,
  r"MAX_NAME_LENGTH": (o) => o.MAX_NAME_LENGTH,
  r"editedFirstName": (o) => o.editedFirstName,
  r"MAX_SURNAME_LENGTH": (o) => o.MAX_SURNAME_LENGTH,
  r"editedLastName": (o) => o.editedLastName,
  r"MAX_NICKNAME_LENGTH": (o) => o.MAX_NICKNAME_LENGTH,
  r"editedNickName": (o) => o.editedNickName,
  r"nicknameErrorText": (o) => o.nicknameErrorText,
  r"editedEmail": (o) => o.editedEmail,
  r"emailErrorText": (o) => o.emailErrorText,
  r"editedPassword": (o) => o.editedPassword,
  r"editedRepeatPassword": (o) => o.editedRepeatPassword,
  r"passwordErrorText": (o) => o.passwordErrorText,
  r"canSave": (o) => o.canSave,
  r"isFacebookConnected": (o) => o.isFacebookConnected,
  r"theNickName": (o) => o.theNickName,
  r"theEmail": (o) => o.theEmail,
  r"showCreateContest": (o) => o.showCreateContest,
  r"currentContestList": (o) => o.currentContestList,
  r"contestsListOriginal": (o) => o.contestsListOriginal,
  r"isNotEmpty": (o) => o.isNotEmpty,
  r"contestsListOrdered": (o) => o.contestsListOrdered,
  r"startDate": (o) => o.startDate,
  r"isHistory": (o) => o.isHistory,
  r"isLive": (o) => o.isLive,
  r"key": (o) => o.key,
  r"formationList": (o) => o.formationList,
  r"slot": (o) => o.slot,
  r"fullName": (o) => o.fullName,
  r"matchEventName": (o) => o.matchEventName,
  r"salary": (o) => o.salary,
  r"wraperId": (o) => o.wraperId,
  r"allSoccerPlayersES": (o) => o.allSoccerPlayersES,
  r"teamListES": (o) => o.teamListES,
  r"allSoccerPlayersUK": (o) => o.allSoccerPlayersUK,
  r"teamListUK": (o) => o.teamListUK,
  r"AllPlayers": (o) => o.AllPlayers,
  r"event": (o) => o.event,
  r"GoalKeepers": (o) => o.GoalKeepers,
  r"Defenders": (o) => o.Defenders,
  r"MidFielders": (o) => o.MidFielders,
  r"Forwards": (o) => o.Forwards,
  r"achievementList": (o) => o.achievementList,
  r"achiev": (o) => o.achiev,
  r"titleList": (o) => o.titleList,
  r"sectionList": (o) => o.sectionList,
  r"isLoggedPlayer": (o) => o.isLoggedPlayer,
  r"userShown": (o) => o.userShown,
  r"userId": (o) => o.userId,
  r"trueskillTabTitle": (o) => o.trueskillTabTitle,
  r"goldTabTitle": (o) => o.goldTabTitle,
  r"achievementsTabTitle": (o) => o.achievementsTabTitle,
  r"sharingInfoTrueSkill": (o) => o.sharingInfoTrueSkill,
  r"pointsUserList": (o) => o.pointsUserList,
  r"playerPointsInfo": (o) => o.playerPointsInfo,
  r"pointsColumnName": (o) => o.pointsColumnName,
  r"playerPointsHint": (o) => o.playerPointsHint,
  r"USERS_TO_SHOW": (o) => o.USERS_TO_SHOW,
  r"sharingInfoGold": (o) => o.sharingInfoGold,
  r"moneyUserList": (o) => o.moneyUserList,
  r"playerMoneyInfo": (o) => o.playerMoneyInfo,
  r"moneyColumnName": (o) => o.moneyColumnName,
  r"playerMoneyHint": (o) => o.playerMoneyHint,
  r"showFilterByPosition": (o) => o.showFilterByPosition,
  r"posFilterList": (o) => o.posFilterList,
  r"fieldPos": (o) => o.fieldPos,
  r"showFavorites": (o) => o.showFavorites,
  r"isHeaded": (o) => o.isHeaded,
  r"element": (o) => o.element,
  r"shownElements": (o) => o.shownElements,
  r"userData": (o) => o.userData,
  r"firstName": (o) => o.firstName,
  r"lastName": (o) => o.lastName,
  r"nickName": (o) => o.nickName,
  r"email": (o) => o.email,
  r"balance": (o) => o.balance,
  r"rankingPointsPosition": (o) => o.rankingPointsPosition,
  r"rankingPoints": (o) => o.rankingPoints,
  r"rankingMoneyPosition": (o) => o.rankingMoneyPosition,
  r"rankingMoney": (o) => o.rankingMoney,
  r"placeholderName": (o) => o.placeholderName,
  r"MAX_LENGTH_CONTEST_NAME": (o) => o.MAX_LENGTH_CONTEST_NAME,
  r"contestName": (o) => o.contestName,
  r"templatesPerTypeList": (o) => o.templatesPerTypeList,
  r"TYPE_OFICIAL": (o) => o.TYPE_OFICIAL,
  r"isEmpty": (o) => o.isEmpty,
  r"contestType": (o) => o.contestType,
  r"TYPE_TRAINING": (o) => o.TYPE_TRAINING,
  r"templatesPerCompetitionList": (o) => o.templatesPerCompetitionList,
  r"LEAGUE_ES": (o) => o.LEAGUE_ES,
  r"selectedCompetition": (o) => o.selectedCompetition,
  r"LEAGUE_UK": (o) => o.LEAGUE_UK,
  r"templatesPerStyle": (o) => o.templatesPerStyle,
  r"STYLE_HEAD_TO_HEAD": (o) => o.STYLE_HEAD_TO_HEAD,
  r"contestStyle": (o) => o.contestStyle,
  r"STYLE_LEAGUE": (o) => o.STYLE_LEAGUE,
  r"selectedLeaguePlayerCount": (o) => o.selectedLeaguePlayerCount,
  r"leaguePlayerCountList": (o) => o.leaguePlayerCountList,
  r"selectedTemplate": (o) => o.selectedTemplate,
  r"printableTemplateList": (o) => o.printableTemplateList,
  r"comboDefaultText": (o) => o.comboDefaultText,
  r"template": (o) => o.template,
  r"templateContestId": (o) => o.templateContestId,
  r"selectedDate": (o) => o.selectedDate,
  r"selectedHour": (o) => o.selectedHour,
  r"hour": (o) => o.hour,
  r"hourList": (o) => o.hourList,
  r"selectedMinutesText": (o) => o.selectedMinutesText,
  r"computedPrize": (o) => o.computedPrize,
  r"prizeType": (o) => o.prizeType,
  r"isComplete": (o) => o.isComplete,
  r"match": (o) => o.match,
  r"soccerTeamA": (o) => o.soccerTeamA,
  r"shortName": (o) => o.shortName,
  r"soccerTeamB": (o) => o.soccerTeamB,
  r"prize": (o) => o.prize,
  r"contestant": (o) => o.contestant,
  r"trueSkill": (o) => o.trueSkill,
  r"teamFilter": (o) => o.teamFilter,
  r"isShown": (o) => o.isShown,
  r"matchEventsSorted": (o) => o.matchEventsSorted,
  r"useAsFilter": (o) => o.useAsFilter,
  r"liveContestsMessage": (o) => o.liveContestsMessage,
  r"hasLiveContests": (o) => o.hasLiveContests,
  r"contestsService": (o) => o.contestsService,
  r"liveContests": (o) => o.liveContests,
  r"liveSortType": (o) => o.liveSortType,
  r"waitingContestsMessage": (o) => o.waitingContestsMessage,
  r"hasWaitingContests": (o) => o.hasWaitingContests,
  r"waitingContests": (o) => o.waitingContests,
  r"waitingSortType": (o) => o.waitingSortType,
  r"historyContestsMessage": (o) => o.historyContestsMessage,
  r"hasHistoryContests": (o) => o.hasHistoryContests,
  r"historyContests": (o) => o.historyContests,
  r"historySortType": (o) => o.historySortType,
  r"tutorialIniciacionName": (o) => o.tutorialIniciacionName,
  r"srcDet": (o) => o.srcDet,
  r"matchEvents": (o) => o.matchEvents,
  r"textoSelector": (o) => o.textoSelector,
  r"texto": (o) => o.texto,
  r"fbuser": (o) => o.fbuser,
  r"intentTweetParams": (o) => o.intentTweetParams,
  r"isViewContestEntryMode": (o) => o.isViewContestEntryMode,
  r"userPosition": (o) => o.userPosition,
  r"userScore": (o) => o.userScore,
  r"userNickname": (o) => o.userNickname,
  r"changeOrdinalText": (o) => o.changeOrdinalText,
  r"remainingTime": (o) => o.remainingTime,
  r"slots": (o) => o.slots,
  r"owner": (o) => o.owner,
  r"abrevName": (o) => o.abrevName,
  r"percentOfUsersThatOwn": (o) => o.percentOfUsersThatOwn,
  r"score": (o) => o.score,
  r"users": (o) => o.users,
  r"titleText": (o) => o.titleText,
  r"descriptionText": (o) => o.descriptionText,
  r"isModeViewing": (o) => o.isModeViewing,
  r"isModeCreated": (o) => o.isModeCreated,
  r"isModeEdited": (o) => o.isModeEdited,
  r"isModeSwapped": (o) => o.isModeSwapped,
  r"showInviteButton": (o) => o.showInviteButton,
  r"inviteUrl": (o) => o.inviteUrl,
  r"tabChange": (o) => o.tabChange,
  r"getLocalizedText": (o) => o.getLocalizedText,
  r"closePlayerChanges": (o) => o.closePlayerChanges,
  r"onSoccerPlayerActionButton": (o) => o.onSoccerPlayerActionButton,
  r"onUserClick": (o) => o.onUserClick,
  r"toUpperCase": (o) => o.toUpperCase,
  r"formatCurrency": (o) => o.formatCurrency,
  r"cancelPlayerSelection": (o) => o.cancelPlayerSelection,
  r"deleteFantasyTeam": (o) => o.deleteFantasyTeam,
  r"isPlayerSelected": (o) => o.isPlayerSelected,
  r"getConfirmButtonText": (o) => o.getConfirmButtonText,
  r"createFantasyTeam": (o) => o.createFantasyTeam,
  r"onAddClicked": (o) => o.onAddClicked,
  r"getUppercaseLocalizedText": (o) => o.getUppercaseLocalizedText,
  r"goToPage": (o) => o.goToPage,
  r"navigateTo": (o) => o.navigateTo,
  r"changePassword": (o) => o.changePassword,
  r"isCurrentSelected": (o) => o.isCurrentSelected,
  r"selectDay": (o) => o.selectDay,
  r"hasPromos": (o) => o.hasPromos,
  r"gotoPromo": (o) => o.gotoPromo,
  r"getThumb": (o) => o.getThumb,
  r"buyGold": (o) => o.buyGold,
  r"buyEnergy": (o) => o.buyEnergy,
  r"onContestsClick": (o) => o.onContestsClick,
  r"onCreateContestClick": (o) => o.onCreateContestClick,
  r"onScoutingClick": (o) => o.onScoutingClick,
  r"onUpcomingClick": (o) => o.onUpcomingClick,
  r"onLiveClick": (o) => o.onLiveClick,
  r"onHistoryClick": (o) => o.onHistoryClick,
  r"onBlogClick": (o) => o.onBlogClick,
  r"onHowItWorksClick": (o) => o.onHowItWorksClick,
  r"onAction": (o) => o.onAction,
  r"shareEnabled": (o) => o.shareEnabled,
  r"goToLink": (o) => o.goToLink,
  r"closeNotification": (o) => o.closeNotification,
  r"printableMyPosition": (o) => o.printableMyPosition,
  r"getContestTypeIcon": (o) => o.getContestTypeIcon,
  r"getPrizeToShow": (o) => o.getPrizeToShow,
  r"userIsRegistered": (o) => o.userIsRegistered,
  r"getSourceFlag": (o) => o.getSourceFlag,
  r"isCustomContest": (o) => o.isCustomContest,
  r"authorImage": (o) => o.authorImage,
  r"goToParent": (o) => o.goToParent,
  r"toggleTeamsPanel": (o) => o.toggleTeamsPanel,
  r"teamHTML": (o) => o.teamHTML,
  r"saveChanges": (o) => o.saveChanges,
  r"exit": (o) => o.exit,
  r"shareOnFB": (o) => o.shareOnFB,
  r"getStaticLocalizedText": (o) => o.getStaticLocalizedText,
  r"getContestMorfology": (o) => o.getContestMorfology,
  r"onRow": (o) => o.onRow,
  r"getContestImage": (o) => o.getContestImage,
  r"timeInfo": (o) => o.timeInfo,
  r"isSoon": (o) => o.isSoon,
  r"dateInfo": (o) => o.dateInfo,
  r"getPointsToShow": (o) => o.getPointsToShow,
  r"friendsCount": (o) => o.friendsCount,
  r"getPrintableFormation": (o) => o.getPrintableFormation,
  r"formationToString": (o) => o.formationToString,
  r"getSlotClassColor": (o) => o.getSlotClassColor,
  r"getSlotDescription": (o) => o.getSlotDescription,
  r"getPrintableSalary": (o) => o.getPrintableSalary,
  r"getPrintableGoldCost": (o) => o.getPrintableGoldCost,
  r"onFavoritesChange": (o) => o.onFavoritesChange,
  r"getClassesIsNegative": (o) => o.getClassesIsNegative,
  r"achievementEarned": (o) => o.achievementEarned,
  r"gotoSection": (o) => o.gotoSection,
  r"getTextForFieldPos": (o) => o.getTextForFieldPos,
  r"isActiveFieldPos": (o) => o.isActiveFieldPos,
  r"switchFavorites": (o) => o.switchFavorites,
  r"isThePlayer": (o) => o.isThePlayer,
  r"editPersonalData": (o) => o.editPersonalData,
  r"goBuyGold": (o) => o.goBuyGold,
  r"goLeaderboard": (o) => o.goLeaderboard,
  r"GetLocalizedText": (o) => o.GetLocalizedText,
  r"onSelectedDayChange": (o) => o.onSelectedDayChange,
  r"toInt": (o) => o.toInt,
  r"createContest": (o) => o.createContest,
  r"enterContest": (o) => o.enterContest,
  r"formatMatchDate": (o) => o.formatMatchDate,
  r"getMatchAndPeriodInfo": (o) => o.getMatchAndPeriodInfo,
  r"gotoLobby": (o) => o.gotoLobby,
  r"onLiveActionClick": (o) => o.onLiveActionClick,
  r"onWaitingActionClick": (o) => o.onWaitingActionClick,
  r"onHistoryActionClick": (o) => o.onHistoryActionClick,
  r"goTutorial": (o) => o.goTutorial,
  r"goToHowToPlay": (o) => o.goToHowToPlay,
  r"backToLanding": (o) => o.backToLanding,
  r"rememberMyPassword": (o) => o.rememberMyPassword,
  r"onTweet": (o) => o.onTweet,
  r"onFollow": (o) => o.onFollow,
  r"editTeam": (o) => o.editTeam,
  r"onCloseButtonClick": (o) => o.onCloseButtonClick,
  r"requestChange": (o) => o.requestChange,
  r"playerIsChangeable": (o) => o.playerIsChangeable,
  r"playerIsChanging": (o) => o.playerIsChanging,
  r"isMainPlayer": (o) => o.isMainPlayer,
  r"getPrize": (o) => o.getPrize,
  r"onInviteFriends": (o) => o.onInviteFriends,
  r"onShareTextareaFocus": (o) => o.onShareTextareaFocus,
  r"onTutorialClick": (o) => o.onTutorialClick
};
final Map<String, FieldSetter> setters = {
  r"select": (o, v) => o.select = v,
  r"urls": (o, v) => o.urls = v,
  r"value": (o, v) => o.value = v,
  r"bind": (o, v) => o.bind = v,
  r"valueExpression": (o, v) => o.valueExpression = v,
  r"onAbort": (o, v) => o.onAbort = v,
  r"onBeforeCopy": (o, v) => o.onBeforeCopy = v,
  r"onBeforeCut": (o, v) => o.onBeforeCut = v,
  r"onBeforePaste": (o, v) => o.onBeforePaste = v,
  r"onBlur": (o, v) => o.onBlur = v,
  r"onChange": (o, v) => o.onChange = v,
  r"onClick": (o, v) => o.onClick = v,
  r"onContextMenu": (o, v) => o.onContextMenu = v,
  r"onCopy": (o, v) => o.onCopy = v,
  r"onCut": (o, v) => o.onCut = v,
  r"onDoubleClick": (o, v) => o.onDoubleClick = v,
  r"onDrag": (o, v) => o.onDrag = v,
  r"onDragEnd": (o, v) => o.onDragEnd = v,
  r"onDragEnter": (o, v) => o.onDragEnter = v,
  r"onDragLeave": (o, v) => o.onDragLeave = v,
  r"onDragOver": (o, v) => o.onDragOver = v,
  r"onDragStart": (o, v) => o.onDragStart = v,
  r"onDrop": (o, v) => o.onDrop = v,
  r"onError": (o, v) => o.onError = v,
  r"onFocus": (o, v) => o.onFocus = v,
  r"onFullscreenChange": (o, v) => o.onFullscreenChange = v,
  r"onFullscreenError": (o, v) => o.onFullscreenError = v,
  r"onInput": (o, v) => o.onInput = v,
  r"onInvalid": (o, v) => o.onInvalid = v,
  r"onKeyDown": (o, v) => o.onKeyDown = v,
  r"onKeyPress": (o, v) => o.onKeyPress = v,
  r"onKeyUp": (o, v) => o.onKeyUp = v,
  r"onLoad": (o, v) => o.onLoad = v,
  r"onMouseDown": (o, v) => o.onMouseDown = v,
  r"onMouseEnter": (o, v) => o.onMouseEnter = v,
  r"onMouseLeave": (o, v) => o.onMouseLeave = v,
  r"onMouseMove": (o, v) => o.onMouseMove = v,
  r"onMouseOut": (o, v) => o.onMouseOut = v,
  r"onMouseOver": (o, v) => o.onMouseOver = v,
  r"onMouseUp": (o, v) => o.onMouseUp = v,
  r"onMouseWheel": (o, v) => o.onMouseWheel = v,
  r"onPaste": (o, v) => o.onPaste = v,
  r"onReset": (o, v) => o.onReset = v,
  r"onScroll": (o, v) => o.onScroll = v,
  r"onSearch": (o, v) => o.onSearch = v,
  r"onSelect": (o, v) => o.onSelect = v,
  r"onSelectStart": (o, v) => o.onSelectStart = v,
  r"onSubmit": (o, v) => o.onSubmit = v,
  r"onTouchCancel": (o, v) => o.onTouchCancel = v,
  r"onTouchEnd": (o, v) => o.onTouchEnd = v,
  r"onTouchEnter": (o, v) => o.onTouchEnter = v,
  r"onTouchLeave": (o, v) => o.onTouchLeave = v,
  r"onTouchMove": (o, v) => o.onTouchMove = v,
  r"onTouchStart": (o, v) => o.onTouchStart = v,
  r"onTransitionEnd": (o, v) => o.onTransitionEnd = v,
  r"condition": (o, v) => o.condition = v,
  r"url": (o, v) => o.url = v,
  r"name": (o, v) => o.name = v,
  r"model": (o, v) => o.model = v,
  r"idlAttrKind": (o, v) => o.idlAttrKind = v,
  r"count": (o, v) => o.count = v,
  r"expression": (o, v) => o.expression = v,
  r"templateUrl": (o, v) => o.templateUrl = v,
  r"hide": (o, v) => o.hide = v,
  r"show": (o, v) => o.show = v,
  r"checked": (o, v) => o.checked = v,
  r"disabled": (o, v) => o.disabled = v,
  r"multiple": (o, v) => o.multiple = v,
  r"open": (o, v) => o.open = v,
  r"readonly": (o, v) => o.readonly = v,
  r"required": (o, v) => o.required = v,
  r"selected": (o, v) => o.selected = v,
  r"href": (o, v) => o.href = v,
  r"src": (o, v) => o.src = v,
  r"srcset": (o, v) => o.srcset = v,
  r"styleExpression": (o, v) => o.styleExpression = v,
  r"max": (o, v) => o.max = v,
  r"min": (o, v) => o.min = v,
  r"pattern": (o, v) => o.pattern = v,
  r"minlength": (o, v) => o.minlength = v,
  r"maxlength": (o, v) => o.maxlength = v,
  r"options": (o, v) => o.options = v,
  r"option": (o, v) => o.option = v,
  r"routeName": (o, v) => o.routeName = v,
  r"windowSize": (o, v) => o.windowSize = v,
  r"Data": (o, v) => o.Data = v,
  r"Earned": (o, v) => o.Earned = v,
  r"currentSelectedDate": (o, v) => o.currentSelectedDate = v,
  r"dates": (o, v) => o.dates = v,
  r"onDayClickCallback": (o, v) => o.onDayClickCallback = v,
  r"maxWidth": (o, v) => o.maxWidth = v,
  r"fbUser": (o, v) => o.fbUser = v,
  r"onChallenge": (o, v) => o.onChallenge = v,
  r"showChallenge": (o, v) => o.showChallenge = v,
  r"showManagerLevel": (o, v) => o.showManagerLevel = v,
  r"idError": (o, v) => o.idError = v,
  r"matchFilter": (o, v) => o.matchFilter = v,
  r"setContest": (o, v) => o.setContest = v,
  r"viewState": (o, v) => o.viewState = v,
  r"setModal": (o, v) => o.setModal = v,
  r"setShowMatches": (o, v) => o.setShowMatches = v,
  r"setContestId": (o, v) => o.setContestId = v,
  r"setShowFilter": (o, v) => o.setShowFilter = v,
  r"selectedOption": (o, v) => o.selectedOption = v,
  r"teamList": (o, v) => o.teamList = v,
  r"identifier": (o, v) => o.identifier = v,
  r"onPageChange": (o, v) => o.onPageChange = v,
  r"itemsPerPageCount": (o, v) => o.itemsPerPageCount = v,
  r"listLength": (o, v) => o.listLength = v,
  r"description": (o, v) => o.description = v,
  r"image": (o, v) => o.image = v,
  r"caption": (o, v) => o.caption = v,
  r"title": (o, v) => o.title = v,
  r"onShare": (o, v) => o.onShare = v,
  r"showLike": (o, v) => o.showLike = v,
  r"info": (o, v) => o.info = v,
  r"profileService": (o, v) => o.profileService = v,
  r"user": (o, v) => o.user = v,
  r"isModal": (o, v) => o.isModal = v,
  r"contestsList": (o, v) => o.contestsList = v,
  r"actionButtonTitle": (o, v) => o.actionButtonTitle = v,
  r"showDate": (o, v) => o.showDate = v,
  r"sortOrder": (o, v) => o.sortOrder = v,
  r"filterByDate": (o, v) => o.filterByDate = v,
  r"onListChange": (o, v) => o.onListChange = v,
  r"onRowClick": (o, v) => o.onRowClick = v,
  r"onActionClick": (o, v) => o.onActionClick = v,
  r"alertNotEnoughResources": (o, v) => o.alertNotEnoughResources = v,
  r"resource": (o, v) => o.resource = v,
  r"alertNegativeBalance": (o, v) => o.alertNegativeBalance = v,
  r"alertMaxPlayersSameTeamExceed": (o, v) => o.alertMaxPlayersSameTeamExceed = v,
  r"managerLevel": (o, v) => o.managerLevel = v,
  r"contest": (o, v) => o.contest = v,
  r"lineupSlots": (o, v) => o.lineupSlots = v,
  r"lineupFormation": (o, v) => o.lineupFormation = v,
  r"onLineupSlotSelected": (o, v) => o.onLineupSlotSelected = v,
  r"formationId": (o, v) => o.formationId = v,
  r"hashtag": (o, v) => o.hashtag = v,
  r"flashMessageService": (o, v) => o.flashMessageService = v,
  r"flashMessages": (o, v) => o.flashMessages = v,
  r"globalMessages": (o, v) => o.globalMessages = v,
  r"nameFilter": (o, v) => o.nameFilter = v,
  r"fieldPosFilter": (o, v) => o.fieldPosFilter = v,
  r"onlyFavorites": (o, v) => o.onlyFavorites = v,
  r"showOnXs": (o, v) => o.showOnXs = v,
  r"showFavoritesButton": (o, v) => o.showFavoritesButton = v,
  r"showTitle": (o, v) => o.showTitle = v,
  r"positionFiltersEnabled": (o, v) => o.positionFiltersEnabled = v,
  r"showHeader": (o, v) => o.showHeader = v,
  r"tableValues": (o, v) => o.tableValues = v,
  r"playerInfo": (o, v) => o.playerInfo = v,
  r"pointsColumnLabel": (o, v) => o.pointsColumnLabel = v,
  r"hint": (o, v) => o.hint = v,
  r"rowsToShow": (o, v) => o.rowsToShow = v,
  r"allSoccerPlayers": (o, v) => o.allSoccerPlayers = v,
  r"favoritesPlayers": (o, v) => o.favoritesPlayers = v,
  r"onSoccerPlayerAction": (o, v) => o.onSoccerPlayerAction = v,
  r"buttonText": (o, v) => o.buttonText = v,
  r"setUseAsFilter": (o, v) => o.setUseAsFilter = v,
  r"isPanelOpen": (o, v) => o.isPanelOpen = v,
  r"templateContest": (o, v) => o.templateContest = v,
  r"contestId": (o, v) => o.contestId = v,
  r"fbUsers": (o, v) => o.fbUsers = v,
  r"contestEntry": (o, v) => o.contestEntry = v,
  r"watch": (o, v) => o.watch = v,
  r"isOpponent": (o, v) => o.isOpponent = v,
  r"showCloseButton": (o, v) => o.showCloseButton = v,
  r"showChanges": (o, v) => o.showChanges = v,
  r"numChanges": (o, v) => o.numChanges = v,
  r"changingSoccerId": (o, v) => o.changingSoccerId = v,
  r"availableSalary": (o, v) => o.availableSalary = v,
  r"onClose": (o, v) => o.onClose = v,
  r"onRequestChange": (o, v) => o.onRequestChange = v,
  r"contestEntries": (o, v) => o.contestEntries = v,
  r"favoritesList": (o, v) => o.favoritesList = v,
  r"hideLineupPlayers": (o, v) => o.hideLineupPlayers = v,
  r"additionalGoldPrice": (o, v) => o.additionalGoldPrice = v,
  r"setSoccerPlayers": (o, v) => o.setSoccerPlayers = v,
  r"setLineupFilter": (o, v) => o.setLineupFilter = v,
  r"lineupFilter": (o, v) => o.lineupFilter = v,
  r"translate": (o, v) => o.translate = v,
  r"isMakingChange": (o, v) => o.isMakingChange = v,
  r"scrDet": (o, v) => o.scrDet = v,
  r"isXsScreen": (o, v) => o.isXsScreen = v,
  r"isOpponentSelected": (o, v) => o.isOpponentSelected = v,
  r"lastOpponentSelected": (o, v) => o.lastOpponentSelected = v,
  r"mainPlayer": (o, v) => o.mainPlayer = v,
  r"updatedDate": (o, v) => o.updatedDate = v,
  r"numAvailableChanges": (o, v) => o.numAvailableChanges = v,
  r"changingPlayerId": (o, v) => o.changingPlayerId = v,
  r"remainingSalaryChangingPlayer": (o, v) => o.remainingSalaryChangingPlayer = v,
  r"instanceSoccerPlayer": (o, v) => o.instanceSoccerPlayer = v,
  r"soccerPlayerId": (o, v) => o.soccerPlayerId = v,
  r"soccerPlayer": (o, v) => o.soccerPlayer = v,
  r"userManagerLevel": (o, v) => o.userManagerLevel = v,
  r"changePrice": (o, v) => o.changePrice = v,
  r"selectedOpponent": (o, v) => o.selectedOpponent = v,
  r"modalSize": (o, v) => o.modalSize = v,
  r"filteredFriendList": (o, v) => o.filteredFriendList = v,
  r"isNotXsScreen": (o, v) => o.isNotXsScreen = v,
  r"printableAvailableSalary": (o, v) => o.printableAvailableSalary = v,
  r"isSelectingSoccerPlayer": (o, v) => o.isSelectingSoccerPlayer = v,
  r"enoughResourcesForEntryFee": (o, v) => o.enoughResourcesForEntryFee = v,
  r"resourceName": (o, v) => o.resourceName = v,
  r"isNegativeBalance": (o, v) => o.isNegativeBalance = v,
  r"playersInSameTeamInvalid": (o, v) => o.playersInSameTeamInvalid = v,
  r"playerManagerLevel": (o, v) => o.playerManagerLevel = v,
  r"slotIndex": (o, v) => o.slotIndex = v,
  r"userIsLoggedIn": (o, v) => o.userIsLoggedIn = v,
  r"isInvalidFantasyTeam": (o, v) => o.isInvalidFantasyTeam = v,
  r"contestInfoFirstTimeActivation": (o, v) => o.contestInfoFirstTimeActivation = v,
  r"theHtml": (o, v) => o.theHtml = v,
  r"selectablePlayer": (o, v) => o.selectablePlayer = v,
  r"currentInfoData": (o, v) => o.currentInfoData = v,
  r"printableSalary": (o, v) => o.printableSalary = v,
  r"stat": (o, v) => o.stat = v,
  r"seasonResumeStats": (o, v) => o.seasonResumeStats = v,
  r"length": (o, v) => o.length = v,
  r"seasonTableHeaders": (o, v) => o.seasonTableHeaders = v,
  r"item": (o, v) => o.item = v,
  r"seasonsList": (o, v) => o.seasonsList = v,
  r"year": (o, v) => o.year = v,
  r"stats": (o, v) => o.stats = v,
  r"$index": (o, v) => o.$index = v,
  r"state": (o, v) => o.state = v,
  r"$event": (o, v) => o.$event = v,
  r"thePassword": (o, v) => o.thePassword = v,
  r"MIN_PASSWORD_LENGTH": (o, v) => o.MIN_PASSWORD_LENGTH = v,
  r"theRePassword": (o, v) => o.theRePassword = v,
  r"errorMessage": (o, v) => o.errorMessage = v,
  r"enabledSubmit": (o, v) => o.enabledSubmit = v,
  r"day": (o, v) => o.day = v,
  r"dayList": (o, v) => o.dayList = v,
  r"goldProducts": (o, v) => o.goldProducts = v,
  r"captionImage": (o, v) => o.captionImage = v,
  r"quantity": (o, v) => o.quantity = v,
  r"id": (o, v) => o.id = v,
  r"price": (o, v) => o.price = v,
  r"isMostPopular": (o, v) => o.isMostPopular = v,
  r"energyProducts": (o, v) => o.energyProducts = v,
  r"energyItem": (o, v) => o.energyItem = v,
  r"purchasable": (o, v) => o.purchasable = v,
  r"canBuyEnergy": (o, v) => o.canBuyEnergy = v,
  r"contestTileHTML": (o, v) => o.contestTileHTML = v,
  r"isCreateContestTileEnabled": (o, v) => o.isCreateContestTileEnabled = v,
  r"CreateContestTileText": (o, v) => o.CreateContestTileText = v,
  r"isScoutingTileEnabled": (o, v) => o.isScoutingTileEnabled = v,
  r"isUpcomingTileEnabled": (o, v) => o.isUpcomingTileEnabled = v,
  r"numUpcomingContests": (o, v) => o.numUpcomingContests = v,
  r"isLiveTileEnabled": (o, v) => o.isLiveTileEnabled = v,
  r"numLiveContests": (o, v) => o.numLiveContests = v,
  r"isHistoryTileEnabled": (o, v) => o.isHistoryTileEnabled = v,
  r"numVirtualHistoryContests": (o, v) => o.numVirtualHistoryContests = v,
  r"numRealHistoryContests": (o, v) => o.numRealHistoryContests = v,
  r"isBlogTileEnabled": (o, v) => o.isBlogTileEnabled = v,
  r"isHowItWorksEnabled": (o, v) => o.isHowItWorksEnabled = v,
  r"notificationList": (o, v) => o.notificationList = v,
  r"notification": (o, v) => o.notification = v,
  r"type": (o, v) => o.type = v,
  r"achievement": (o, v) => o.achievement = v,
  r"date": (o, v) => o.date = v,
  r"link": (o, v) => o.link = v,
  r"profileImage": (o, v) => o.profileImage = v,
  r"nameWidth": (o, v) => o.nameWidth = v,
  r"nickname": (o, v) => o.nickname = v,
  r"challengeText": (o, v) => o.challengeText = v,
  r"viewLive": (o, v) => o.viewLive = v,
  r"viewHistory": (o, v) => o.viewHistory = v,
  r"numEntries": (o, v) => o.numEntries = v,
  r"entryFee": (o, v) => o.entryFee = v,
  r"sharingInfo": (o, v) => o.sharingInfo = v,
  r"isInsideModal": (o, v) => o.isInsideModal = v,
  r"showMatches": (o, v) => o.showMatches = v,
  r"showFilter": (o, v) => o.showFilter = v,
  r"idSufix": (o, v) => o.idSufix = v,
  r"isTeamsPanelOpen": (o, v) => o.isTeamsPanelOpen = v,
  r"team": (o, v) => o.team = v,
  r"optionsSelectorValue": (o, v) => o.optionsSelectorValue = v,
  r"loadingService": (o, v) => o.loadingService = v,
  r"isLoading": (o, v) => o.isLoading = v,
  r"MAX_NAME_LENGTH": (o, v) => o.MAX_NAME_LENGTH = v,
  r"editedFirstName": (o, v) => o.editedFirstName = v,
  r"MAX_SURNAME_LENGTH": (o, v) => o.MAX_SURNAME_LENGTH = v,
  r"editedLastName": (o, v) => o.editedLastName = v,
  r"MAX_NICKNAME_LENGTH": (o, v) => o.MAX_NICKNAME_LENGTH = v,
  r"editedNickName": (o, v) => o.editedNickName = v,
  r"nicknameErrorText": (o, v) => o.nicknameErrorText = v,
  r"editedEmail": (o, v) => o.editedEmail = v,
  r"emailErrorText": (o, v) => o.emailErrorText = v,
  r"editedPassword": (o, v) => o.editedPassword = v,
  r"editedRepeatPassword": (o, v) => o.editedRepeatPassword = v,
  r"passwordErrorText": (o, v) => o.passwordErrorText = v,
  r"canSave": (o, v) => o.canSave = v,
  r"isFacebookConnected": (o, v) => o.isFacebookConnected = v,
  r"theNickName": (o, v) => o.theNickName = v,
  r"theEmail": (o, v) => o.theEmail = v,
  r"showCreateContest": (o, v) => o.showCreateContest = v,
  r"currentContestList": (o, v) => o.currentContestList = v,
  r"contestsListOriginal": (o, v) => o.contestsListOriginal = v,
  r"isNotEmpty": (o, v) => o.isNotEmpty = v,
  r"contestsListOrdered": (o, v) => o.contestsListOrdered = v,
  r"startDate": (o, v) => o.startDate = v,
  r"isHistory": (o, v) => o.isHistory = v,
  r"isLive": (o, v) => o.isLive = v,
  r"key": (o, v) => o.key = v,
  r"formationList": (o, v) => o.formationList = v,
  r"slot": (o, v) => o.slot = v,
  r"fullName": (o, v) => o.fullName = v,
  r"matchEventName": (o, v) => o.matchEventName = v,
  r"salary": (o, v) => o.salary = v,
  r"wraperId": (o, v) => o.wraperId = v,
  r"allSoccerPlayersES": (o, v) => o.allSoccerPlayersES = v,
  r"teamListES": (o, v) => o.teamListES = v,
  r"allSoccerPlayersUK": (o, v) => o.allSoccerPlayersUK = v,
  r"teamListUK": (o, v) => o.teamListUK = v,
  r"AllPlayers": (o, v) => o.AllPlayers = v,
  r"event": (o, v) => o.event = v,
  r"GoalKeepers": (o, v) => o.GoalKeepers = v,
  r"Defenders": (o, v) => o.Defenders = v,
  r"MidFielders": (o, v) => o.MidFielders = v,
  r"Forwards": (o, v) => o.Forwards = v,
  r"achievementList": (o, v) => o.achievementList = v,
  r"achiev": (o, v) => o.achiev = v,
  r"titleList": (o, v) => o.titleList = v,
  r"sectionList": (o, v) => o.sectionList = v,
  r"isLoggedPlayer": (o, v) => o.isLoggedPlayer = v,
  r"userShown": (o, v) => o.userShown = v,
  r"userId": (o, v) => o.userId = v,
  r"trueskillTabTitle": (o, v) => o.trueskillTabTitle = v,
  r"goldTabTitle": (o, v) => o.goldTabTitle = v,
  r"achievementsTabTitle": (o, v) => o.achievementsTabTitle = v,
  r"sharingInfoTrueSkill": (o, v) => o.sharingInfoTrueSkill = v,
  r"pointsUserList": (o, v) => o.pointsUserList = v,
  r"playerPointsInfo": (o, v) => o.playerPointsInfo = v,
  r"pointsColumnName": (o, v) => o.pointsColumnName = v,
  r"playerPointsHint": (o, v) => o.playerPointsHint = v,
  r"USERS_TO_SHOW": (o, v) => o.USERS_TO_SHOW = v,
  r"sharingInfoGold": (o, v) => o.sharingInfoGold = v,
  r"moneyUserList": (o, v) => o.moneyUserList = v,
  r"playerMoneyInfo": (o, v) => o.playerMoneyInfo = v,
  r"moneyColumnName": (o, v) => o.moneyColumnName = v,
  r"playerMoneyHint": (o, v) => o.playerMoneyHint = v,
  r"showFilterByPosition": (o, v) => o.showFilterByPosition = v,
  r"posFilterList": (o, v) => o.posFilterList = v,
  r"fieldPos": (o, v) => o.fieldPos = v,
  r"showFavorites": (o, v) => o.showFavorites = v,
  r"isHeaded": (o, v) => o.isHeaded = v,
  r"element": (o, v) => o.element = v,
  r"shownElements": (o, v) => o.shownElements = v,
  r"userData": (o, v) => o.userData = v,
  r"firstName": (o, v) => o.firstName = v,
  r"lastName": (o, v) => o.lastName = v,
  r"nickName": (o, v) => o.nickName = v,
  r"email": (o, v) => o.email = v,
  r"balance": (o, v) => o.balance = v,
  r"rankingPointsPosition": (o, v) => o.rankingPointsPosition = v,
  r"rankingPoints": (o, v) => o.rankingPoints = v,
  r"rankingMoneyPosition": (o, v) => o.rankingMoneyPosition = v,
  r"rankingMoney": (o, v) => o.rankingMoney = v,
  r"placeholderName": (o, v) => o.placeholderName = v,
  r"MAX_LENGTH_CONTEST_NAME": (o, v) => o.MAX_LENGTH_CONTEST_NAME = v,
  r"contestName": (o, v) => o.contestName = v,
  r"templatesPerTypeList": (o, v) => o.templatesPerTypeList = v,
  r"TYPE_OFICIAL": (o, v) => o.TYPE_OFICIAL = v,
  r"isEmpty": (o, v) => o.isEmpty = v,
  r"contestType": (o, v) => o.contestType = v,
  r"TYPE_TRAINING": (o, v) => o.TYPE_TRAINING = v,
  r"templatesPerCompetitionList": (o, v) => o.templatesPerCompetitionList = v,
  r"LEAGUE_ES": (o, v) => o.LEAGUE_ES = v,
  r"selectedCompetition": (o, v) => o.selectedCompetition = v,
  r"LEAGUE_UK": (o, v) => o.LEAGUE_UK = v,
  r"templatesPerStyle": (o, v) => o.templatesPerStyle = v,
  r"STYLE_HEAD_TO_HEAD": (o, v) => o.STYLE_HEAD_TO_HEAD = v,
  r"contestStyle": (o, v) => o.contestStyle = v,
  r"STYLE_LEAGUE": (o, v) => o.STYLE_LEAGUE = v,
  r"selectedLeaguePlayerCount": (o, v) => o.selectedLeaguePlayerCount = v,
  r"leaguePlayerCountList": (o, v) => o.leaguePlayerCountList = v,
  r"selectedTemplate": (o, v) => o.selectedTemplate = v,
  r"printableTemplateList": (o, v) => o.printableTemplateList = v,
  r"comboDefaultText": (o, v) => o.comboDefaultText = v,
  r"template": (o, v) => o.template = v,
  r"templateContestId": (o, v) => o.templateContestId = v,
  r"selectedDate": (o, v) => o.selectedDate = v,
  r"selectedHour": (o, v) => o.selectedHour = v,
  r"hour": (o, v) => o.hour = v,
  r"hourList": (o, v) => o.hourList = v,
  r"selectedMinutesText": (o, v) => o.selectedMinutesText = v,
  r"computedPrize": (o, v) => o.computedPrize = v,
  r"prizeType": (o, v) => o.prizeType = v,
  r"isComplete": (o, v) => o.isComplete = v,
  r"match": (o, v) => o.match = v,
  r"soccerTeamA": (o, v) => o.soccerTeamA = v,
  r"shortName": (o, v) => o.shortName = v,
  r"soccerTeamB": (o, v) => o.soccerTeamB = v,
  r"prize": (o, v) => o.prize = v,
  r"contestant": (o, v) => o.contestant = v,
  r"trueSkill": (o, v) => o.trueSkill = v,
  r"teamFilter": (o, v) => o.teamFilter = v,
  r"isShown": (o, v) => o.isShown = v,
  r"matchEventsSorted": (o, v) => o.matchEventsSorted = v,
  r"useAsFilter": (o, v) => o.useAsFilter = v,
  r"liveContestsMessage": (o, v) => o.liveContestsMessage = v,
  r"hasLiveContests": (o, v) => o.hasLiveContests = v,
  r"contestsService": (o, v) => o.contestsService = v,
  r"liveContests": (o, v) => o.liveContests = v,
  r"liveSortType": (o, v) => o.liveSortType = v,
  r"waitingContestsMessage": (o, v) => o.waitingContestsMessage = v,
  r"hasWaitingContests": (o, v) => o.hasWaitingContests = v,
  r"waitingContests": (o, v) => o.waitingContests = v,
  r"waitingSortType": (o, v) => o.waitingSortType = v,
  r"historyContestsMessage": (o, v) => o.historyContestsMessage = v,
  r"hasHistoryContests": (o, v) => o.hasHistoryContests = v,
  r"historyContests": (o, v) => o.historyContests = v,
  r"historySortType": (o, v) => o.historySortType = v,
  r"tutorialIniciacionName": (o, v) => o.tutorialIniciacionName = v,
  r"srcDet": (o, v) => o.srcDet = v,
  r"matchEvents": (o, v) => o.matchEvents = v,
  r"textoSelector": (o, v) => o.textoSelector = v,
  r"texto": (o, v) => o.texto = v,
  r"fbuser": (o, v) => o.fbuser = v,
  r"intentTweetParams": (o, v) => o.intentTweetParams = v,
  r"isViewContestEntryMode": (o, v) => o.isViewContestEntryMode = v,
  r"userPosition": (o, v) => o.userPosition = v,
  r"userScore": (o, v) => o.userScore = v,
  r"userNickname": (o, v) => o.userNickname = v,
  r"changeOrdinalText": (o, v) => o.changeOrdinalText = v,
  r"remainingTime": (o, v) => o.remainingTime = v,
  r"slots": (o, v) => o.slots = v,
  r"owner": (o, v) => o.owner = v,
  r"abrevName": (o, v) => o.abrevName = v,
  r"percentOfUsersThatOwn": (o, v) => o.percentOfUsersThatOwn = v,
  r"score": (o, v) => o.score = v,
  r"users": (o, v) => o.users = v,
  r"titleText": (o, v) => o.titleText = v,
  r"descriptionText": (o, v) => o.descriptionText = v,
  r"isModeViewing": (o, v) => o.isModeViewing = v,
  r"isModeCreated": (o, v) => o.isModeCreated = v,
  r"isModeEdited": (o, v) => o.isModeEdited = v,
  r"isModeSwapped": (o, v) => o.isModeSwapped = v,
  r"showInviteButton": (o, v) => o.showInviteButton = v,
  r"inviteUrl": (o, v) => o.inviteUrl = v
};
final Map<String, Symbol> symbols = {
  r"group": #group
};
